// SPDX-License-Identifier: GPL-2.0-only
/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 */

#include <dt-bindings/display/tda998x.h>
#include <dt-bindings/interrupt-controller/irq.h>

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
};

&am33xx_pinmux {
	nxp_hdmi_bonelt_pins: nxp_hdmi_bonelt_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_XDMA_EVENT_INTR0, PIN_OUTPUT_PULLDOWN, MUX_MODE3)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA0, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA1, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA2, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA3, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA4, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA5, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA6, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA7, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA8, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA9, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA10, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA11, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA12, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA13, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA14, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA15, PIN_OUTPUT, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_VSYNC, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_HSYNC, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_PCLK, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
			AM33XX_PADCONF(AM335X_PIN_LCD_AC_BIAS_EN, PIN_OUTPUT_PULLDOWN, MUX_MODE0)
		>;
	};

	nxp_hdmi_bonelt_off_pins: nxp_hdmi_bonelt_off_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_XDMA_EVENT_INTR0, PIN_OUTPUT_PULLDOWN, MUX_MODE3)
		>;
	};
        spi1_pins: spi1_pins {
           pinctrl-single,pins = <
                AM33XX_PADCONF(AM335X_PIN_MCASP0_ACLKX, PIN_INPUT, MUX_MODE3)   /*SPI1_SCLK*/
                AM33XX_PADCONF(AM335X_PIN_MCASP0_FSX, PIN_INPUT, MUX_MODE3)     /*SPI1_D0  */                
                AM33XX_PADCONF(AM335X_PIN_MCASP0_AXR0, PIN_INPUT, MUX_MODE3)   /*SPI1_D1  */
                AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKR, PIN_INPUT, MUX_MODE3) /*SPI1_CS0 */
                AM33XX_PADCONF(AM335X_PIN_MCASP0_FSR, PIN_OUTPUT_PULLUP, MUX_MODE7)    /*GPIO3_19 */
                AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKX, PIN_OUTPUT_PULLUP, MUX_MODE7) /*GPIO3_21 */
        >;
    };
    backlight_pwm_pins: pinmux_backlight_pwm_pins {
        pinctrl-single,pins = <
                AM33XX_PADCONF(AM335X_PIN_GPMC_A3, PIN_OUTPUT, MUX_MODE6)              /*GPMC_A3->EHRPWM1B */
        >;
    };  /* gpmc_a2.ehrpwm1b */  

};

&lcdc {
	status = "okay";

	/* If you want to get 24 bit RGB and 16 BGR mode instead of
	 * current 16 bit RGB and 24 BGR modes, set the propety
	 * below to "crossed" and uncomment the video-ports -property
	 * in tda19988 node.
	 */
	blue-and-red-wiring = "straight";

	port {
		lcdc_0: endpoint@0 {
			remote-endpoint = <&hdmi_0>;
		};
	};
};

/*<mGaik>*/
&ehrpwm1 {
     pinctrl-names = "default";
     pinctrl-0 = <&backlight_pwm_pins>;
     status = "okay";
};

&spi1 {
        #address-cells = <1>;
     	#size-cells = <0>;

    	status = "okay";
        pinctrl-names = "default";
        pinctrl-0 = <&spi1_pins>;
    	channel@0{
	   	     status = "disabled";
		     reg = <0>;
	    };
    	display@0{
	            status = "okay";
		    //compatible = "adafruit,yx240qv29", "ilitek,ili9341"; //this makes ili9341 visible once we do lsmod
                    //compatible = "jianda,jd-t18003-t01", "sitronix,st7735r";
                    compatible = "waveshare,ws-2inch-lcd", "sitronix,st7789v";
                    //compatible = "sitronix,st7789v";
		    reg = <0>;
		    //spi-max-frequency = <100000>;
		    spi-max-frequency = <32000000>;
		    spi-cpol;
                    spi-cpha;
		    dc-gpios    = <&gpio3 19 0>;   // lcd dc    P9.27 gpio3[19]
		    //reset-gpios = <&gpio3 21 0>;   // lcd reset P9.25 gpio3[21]
		    reset-gpios = <&gpio3 21 1>;   // lcd reset P9.25 gpio3[21]
     		    // backlight is optional
	    	    // choose either pwm or gpio control
		    backlight = <&backlight_pwm>;    // lcd lite  P9.16 gpmc_a2.ehrpwm1b
		    // refer to https://elinux.org/Beagleboard:Cape_Expansion_Headers
		    // rotation is optional
		    rotation = <180>;
                    buswidth = <8>;
                    //debug = <7>;
	   };
};

//panel@0 {
//        compatible = "sitronix,st7789v";
//        reg = <0>;
//        reset-gpios = <&pio 6 11 GPIO_ACTIVE_LOW>;
//        backlight = <&pwm_bl>;
//        spi-max-frequency = <100000>;
//        spi-cpol;
//        spi-cpha;

//        port {
//                panel_input: endpoint {
//                        remote-endpoint = <&tcon0_out_panel>;
//                };
//        };
//};


&i2c0 {
	tda19988: tda19988@70 {
		compatible = "nxp,tda998x";
		reg = <0x70>;
		nxp,calib-gpios = <&gpio1 25 0>;
		interrupts-extended = <&gpio1 25 IRQ_TYPE_LEVEL_LOW>;

		pinctrl-names = "default", "off";
		pinctrl-0 = <&nxp_hdmi_bonelt_pins>;
		pinctrl-1 = <&nxp_hdmi_bonelt_off_pins>;

		/* Convert 24bit BGR to RGB, e.g. cross red and blue wiring */
		/* video-ports = <0x234501>; */

		#sound-dai-cells = <0>;
		audio-ports = <	TDA998x_I2S	0x03>;

		ports {
			port@0 {
				hdmi_0: endpoint@0 {
					remote-endpoint = <&lcdc_0>;
				};
			};
		};
	};
};

&rtc {
	system-power-controller;
};

//&mcasp0	{
//	status = "disabled";	
//};

/ {
        bl_reg: backlight-regulator {
           compatible = "regulator-fixed";
           regulator-name = "backlight";
           regulator-always-on;
           regulator-boot-on;
           //regulator-min-microvolt = <1800000>;
	   //regulator-max-microvolt = <1800000>;
        };
	memory@80000000 {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};

	clk_mcasp0_fixed: clk_mcasp0_fixed {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <24576000>;
	};

	clk_mcasp0: clk_mcasp0 {
		#clock-cells = <0>;
		compatible = "gpio-gate-clock";
		clocks = <&clk_mcasp0_fixed>;
		enable-gpios = <&gpio1 27 0>; /* BeagleBone Black Clk enable on GPIO1_27 */
	};
        backlight_pwm: backlight_pwm {
           // P9.16 <--> lite (pwm-backlight EHRPWM1B)
           status = "okay";
           compatible = "pwm-backlight";
           pwms = <&ehrpwm1 1 500000 0>;    // First digit: 0 for A side of pwm, 1 for B side
                                            // 500000 is the PWM period in ns
           brightness-levels = <
                0  1  2  3  4  5  6  7  8  9
                10 11 12 13 14 15 16 17 18 19
                20 21 22 23 24 25 26 27 28 29
                30 31 32 33 34 35 36 37 38 39
                40 41 42 43 44 45 46 47 48 49
                50 51 52 53 54 55 56 57 58 59
                60 61 62 63 64 65 66 67 68 69
                70 71 72 73 74 75 76 77 78 79
                80 81 82 83 84 85 86 87 88 89
                90 91 92 93 94 95 96 97 98 99
                100
           >;
           default-brightness-level = <100>;
           power-supply = <&bl_reg>;
     };  
};
